////////////////////////////////////////////////////////////////////////////////
// Filename: depth.ps
////////////////////////////////////////////////////////////////////////////////
Texture2D shaderTexture;
SamplerState SampleType : register(s0);

//////////////
// TYPEDEFS //
//////////////
struct PixelInputType
{
    float4 position : SV_POSITION;
    float4 depthPosition : TEXTURE0;
	float2 tex : TEXTURE1;
};


////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
float4 DepthPixelShader(PixelInputType input) : SV_TARGET
{
	float depthValue;
	float4 color;
	
	float4 textureColor;
	textureColor = shaderTexture.Sample(SampleType, input.tex);
	if(textureColor.a > 0.1f)
	{
		// Get the depth value of the pixel by dividing the Z pixel depth by the homogeneous W coordinate.
		depthValue = input.depthPosition.z / input.depthPosition.w;
	}
	else
	{
		// Otherwise discard this pixel entirely.
		discard;
	}
	
		color = float4(depthValue, depthValue, depthValue, 1.0f);	

	return color;
}
